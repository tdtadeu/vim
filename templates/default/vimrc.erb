set history=1000                " Store lots of :cmdline history
set backspace=indent,eol,start  " Allow backspace in insert mode
set showcmd                     " Show incomplete cmds down the bottom
set showmode                    " Show current mode down the bottom
set gcr=a:blinkon0              " Disable cursor blink
set visualbell                  " No sounds
set autoread                    " Reload files changed outside vim

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

set nowrap       "Don't wrap lines
set linebreak    "Wrap lines at convenient points

au WinLeave * set nocursorline
au WinEnter * set cursorline
set cursorline

set number
syntax enable
filetype plugin indent on

" Creates a margin with color to limit files to 80 columns
execute "set colorcolumn=" . join(range(81,335), ',')

" Creates a margin with color to limit files to 80 columns
execute "set colorcolumn=" . join(range(81,335), ',')

" =============================== Scrolling ==================================
set scrolloff=8         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

" =============================== Appearance =================================
set t_Co=256
set background=dark

" ================================= Search ===================================
" Ignore case when searching
set ignorecase
" When searching try to be smart about cases
set smartcase
" Highlight search results
set hlsearch
" Makes search act like search in modern browsers
set incsearch
" Disables the search highlights
nmap <silent> ,/ :nohlsearch<CR>

nnoremap ; :

nnoremap <Leader>q :wq<CR>
nnoremap <Leader>w :w<CR>
nnoremap <Leader>e :e 
nnoremap <Leader>p :CtrlP<CR>

nnoremap <Leader>g :Ag! 
nnoremap <Leader>f :AgFile 

let g:ctrlp_max_files=5
let g:ctrlp_use_caching=0

if exists('$TMUX')
  function! TmuxOrSplitSwitch(wincmd, tmuxdir)
    let previous_winnr=winnr()
    silent! execute "wincmd " . a:wincmd
    if previous_winnr == winnr()
      call system("tmux select-pane -" . a:tmuxdir)
      redraw!
    endif
  endfunction

  let previous_title=substitute(system("tmux display-message -p '#{pane_title}'"), '\n', '', '')
  let &t_ti="\<Esc>]2;vim\<Esc>\\" . &t_ti
  let &t_te="\<Esc>]2;". previous_title . "\<Esc>\\" . &t_te

  nnoremap <silent> <C-h> :call TmuxOrSplitSwitch('h', 'L')<CR>
  nnoremap <silent> <C-j> :call TmuxOrSplitSwitch('j', 'D')<CR>
  nnoremap <silent> <C-k> :call TmuxOrSplitSwitch('k', 'U')<CR>
  nnoremap <silent> <C-l> :call TmuxOrSplitSwitch('l', 'R')<CR>
else
  map <C-h> <C-w>h
  map <C-j> <C-w>j
  map <C-k> <C-w>k
  map <C-l> <C-w>l
endif
